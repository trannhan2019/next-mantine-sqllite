// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Phong {
  id         Int        @id @default(autoincrement())
  ten        String
  tenVietTat String
  soThuTu    Int        @default(0)
  nhanVien   NhanVien[]
}

model ChucVu {
  id         Int        @id @default(autoincrement())
  ten        String
  tenVietTat String
  nhanVien   NhanVien[]
}

model NhanVien {
  id  Int    @id @default(autoincrement())
  ten String

  phongId Int
  phong   Phong @relation(fields: [phongId], references: [id])

  chucVuId Int
  chucVu   ChucVu @relation(fields: [chucVuId], references: [id])

  soThuTu Int @default(0)
  isActive Boolean @default(true)

  thongTinBHXH ThongTinBHXH?
}

model MucLuongToiThieuVung {
  id             Int      @id @default(autoincrement())
  mucLuong       Int
  thoiGianApdung DateTime
  canCuPhapLy    String?
}

model HeSoPhuCap {
  id       Int    @id @default(autoincrement())
  chucDanh String
  heSo     Float
  thongtinBHXHs ThongTinBHXH[]
}

model HeSoTrachNhiem {
  id       Int    @id @default(autoincrement())
  chucDanh String
  heSo     Float
  thongtinBHXHs ThongTinBHXH[]
}

model NgachLuong {
  id       Int             @id @default(autoincrement())
  maNgach  String          @unique // A1, A2, A3, A4
  chucDanh String // Ví dụ: "Chuyên viên, Kinh tế viên, Kỹ sư"
  bacNgach BacNgachLuong[]
}

model BacNgachLuong {
  id              Int        @id @default(autoincrement())
  bac             Int // 1,2,3,4
  heSo            Float
  thoiGianNangBac Int // ngày
  ngachId         Int
  ngach           NgachLuong @relation(fields: [ngachId], references: [id])
thongTinBHXHs ThongTinBHXH[]

  //@@unique([bac, ngachId]) // tránh trùng bậc trong 1 ngạch
}

model HeSoLuongMax {
  id       Int    @id @default(autoincrement())
  maNgach  String
  bacMax      Int
}

model ThongTinBHXH {
  id       Int    @id @default(autoincrement())

  nhanVienId Int @unique
  nhanVien NhanVien @relation(fields: [nhanVienId], references: [id])


  bacNgachLuongId Int
  bacNgachLuong BacNgachLuong @relation(fields: [bacNgachLuongId], references: [id])

  phuCapId Int?
  phuCap HeSoPhuCap? @relation(fields: [phuCapId], references: [id])

  trachNhiemId Int?
  trachNhiem HeSoTrachNhiem? @relation(fields: [trachNhiemId], references: [id])

  ngayApDung DateTime
  thongTin String?
  isMaxBac Boolean @default(false)
}
